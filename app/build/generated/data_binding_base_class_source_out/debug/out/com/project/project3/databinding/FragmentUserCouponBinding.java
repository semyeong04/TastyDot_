// Generated by view binder compiler. Do not edit!
package com.project.project3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.project3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserCouponBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Guideline guideline16;

  @NonNull
  public final ImageView imageView30;

  @NonNull
  public final RecyclerView rvUserCoupon;

  @NonNull
  public final TextView textView44;

  private FragmentUserCouponBinding(@NonNull FrameLayout rootView, @NonNull Guideline guideline16,
      @NonNull ImageView imageView30, @NonNull RecyclerView rvUserCoupon,
      @NonNull TextView textView44) {
    this.rootView = rootView;
    this.guideline16 = guideline16;
    this.imageView30 = imageView30;
    this.rvUserCoupon = rvUserCoupon;
    this.textView44 = textView44;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserCouponBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserCouponBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_coupon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserCouponBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline16;
      Guideline guideline16 = ViewBindings.findChildViewById(rootView, id);
      if (guideline16 == null) {
        break missingId;
      }

      id = R.id.imageView30;
      ImageView imageView30 = ViewBindings.findChildViewById(rootView, id);
      if (imageView30 == null) {
        break missingId;
      }

      id = R.id.rvUserCoupon;
      RecyclerView rvUserCoupon = ViewBindings.findChildViewById(rootView, id);
      if (rvUserCoupon == null) {
        break missingId;
      }

      id = R.id.textView44;
      TextView textView44 = ViewBindings.findChildViewById(rootView, id);
      if (textView44 == null) {
        break missingId;
      }

      return new FragmentUserCouponBinding((FrameLayout) rootView, guideline16, imageView30,
          rvUserCoupon, textView44);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
