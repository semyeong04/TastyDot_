// Generated by view binder compiler. Do not edit!
package com.project.project3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.project3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnUserLogin;

  @NonNull
  public final EditText etUserLoginId;

  @NonNull
  public final EditText etUserLoginPw;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView tvUserFindId;

  @NonNull
  public final TextView tvUserJoin;

  private ActivityUserLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnUserLogin,
      @NonNull EditText etUserLoginId, @NonNull EditText etUserLoginPw, @NonNull TextView textView,
      @NonNull TextView tvUserFindId, @NonNull TextView tvUserJoin) {
    this.rootView = rootView;
    this.btnUserLogin = btnUserLogin;
    this.etUserLoginId = etUserLoginId;
    this.etUserLoginPw = etUserLoginPw;
    this.textView = textView;
    this.tvUserFindId = tvUserFindId;
    this.tvUserJoin = tvUserJoin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUserLogin;
      Button btnUserLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnUserLogin == null) {
        break missingId;
      }

      id = R.id.etUserLoginId;
      EditText etUserLoginId = ViewBindings.findChildViewById(rootView, id);
      if (etUserLoginId == null) {
        break missingId;
      }

      id = R.id.etUserLoginPw;
      EditText etUserLoginPw = ViewBindings.findChildViewById(rootView, id);
      if (etUserLoginPw == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.tvUserFindId;
      TextView tvUserFindId = ViewBindings.findChildViewById(rootView, id);
      if (tvUserFindId == null) {
        break missingId;
      }

      id = R.id.tvUserJoin;
      TextView tvUserJoin = ViewBindings.findChildViewById(rootView, id);
      if (tvUserJoin == null) {
        break missingId;
      }

      return new ActivityUserLoginBinding((ConstraintLayout) rootView, btnUserLogin, etUserLoginId,
          etUserLoginPw, textView, tvUserFindId, tvUserJoin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
